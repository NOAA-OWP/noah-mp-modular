 INITIALIZE THE MODEL ***********************************************************
 Initializing...
 Model initialization cpu_time (s) =    1.51290009E-02
 
 MODEL NAME AND INPUT/OUTPUT VARAIBLES *****************************************
 Component name = Noah-OWP-Modular Surface Module
 Total input vars =            8
 Total output vars =            7
 Input var = SFCPRS
 Input var = SFCTMP
 Input var = SOLDN
 Input var = LWDN
 Input var = UU
 Input var = VV
 Input var = Q2
 Input var = PRCPNONC
 Output var = QINSUR
 Output var = ETRAN
 Output var = QSEVA
 Output var = EVAPOTRANS
 Output var = TG
 Output var = SNEQV
 Output var = TGS
 
 VARIALBE INFORMTION*************************************************************
 The variable SFCPRS
     has a grid id of            1
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of Pa        
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable SFCTMP
     has a grid id of            2
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of K         
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable SOLDN
     has a grid id of            3
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of W/m2      
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable LWDN
     has a grid id of            4
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of W/m2      
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable UU
     has a grid id of            5
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of m/s       
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable VV
     has a grid id of            6
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of m/s       
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable Q2
     has a grid id of            7
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of kg/kg     
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable PRCPNONC
     has a grid id of            8
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of mm/s      
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable QINSUR
     has a grid id of            9
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of m/s       
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable ETRAN
     has a grid id of           10
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of mm/s      
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable QSEVA
     has a grid id of           11
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of m/s       
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable EVAPOTRANS
     has a grid id of           12
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of m/s       
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable TG
     has a grid id of           13
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of K         
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable SNEQV
     has a grid id of           14
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of mm        
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable TGS
     has a grid id of           15
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of K         
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable lat
     has a grid id of           16
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of degrees   
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable lon
     has a grid id of           17
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of degrees   
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable terrain_slope
     has a grid id of           18
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of degrees   
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable azimuth
     has a grid id of           19
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of real                
     units of degrees cl
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable vegtyp
     has a grid id of           20
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of integer             
     units of none      
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable croptype
     has a grid id of           21
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of integer             
     units of none      
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable isltyp
     has a grid id of           22
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of integer             
     units of none      
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable IST
     has a grid id of           23
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of integer             
     units of none      
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 The variable soilcolor
     has a grid id of           24
     has a grid row count (n_y) of            3
     has a grid column count (n_x) of            2
     has a total cell count (n_x * n_y) of            6
     has a type of integer             
     units of none      
     a size (bytes per grid cell or variable instance) of            4
     and total n bytes (bytes across grid) of           24
 
 GET TIME INFORMATION ***********************************************************
 The start time is    0.0000000000000000     
 The current time is    0.0000000000000000     
 The end time is    31537800.000000000     
 The time step is    1800.0000000000000     
 with a unit of s
 
 RUN THE MODEL ******************************************************************
 Running...
 Finalizing...
 Model is finalized!
 
 
 TEST get/set_value FUNCTIONALITY WITH BMI  (2D VARIABLES ONLY)********************
 SFCPRS
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   1.52587891E-05
     from get_value (flattened) =
   100200.000       100200.000       100200.000       100200.000       100200.000       100200.000    
     from get_value (in XY) =
  100200.0   100200.0  
  100200.0   100200.0  
  100200.0   100200.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   3.81469727E-06
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 SFCTMP
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   1.90734863E-06
     from get_value (flattened) =
   263.949982       263.949982       263.949982       263.949982       263.949982       263.949982    
     from get_value (in XY) =
     263.9      263.9  
     263.9      263.9  
     263.9      263.9  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 SOLDN
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
     from get_value (in XY) =
       0.0        0.0  
       0.0        0.0  
       0.0        0.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 LWDN
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   1.90734863E-06
     from get_value (flattened) =
   281.000000       281.000000       281.000000       281.000000       281.000000       281.000000    
     from get_value (in XY) =
     281.0      281.0  
     281.0      281.0  
     281.0      281.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 UU
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
 -0.196483910     -0.196483910     -0.196483910     -0.196483910     -0.196483910     -0.196483910    
     from get_value (in XY) =
      -0.2       -0.2  
      -0.2       -0.2  
      -0.2       -0.2  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 VV
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   5.62657070       5.62657070       5.62657070       5.62657070       5.62657070       5.62657070    
     from get_value (in XY) =
       5.6        5.6  
       5.6        5.6  
       5.6        5.6  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 Q2
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   1.63385621E-03   1.63385621E-03   1.63385621E-03   1.63385621E-03   1.63385621E-03   1.63385621E-03
     from get_value (in XY) =
       0.0        0.0  
       0.0        0.0  
       0.0        0.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 PRCPNONC
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
     from get_value (in XY) =
       0.0        0.0  
       0.0        0.0  
       0.0        0.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 QINSUR
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
     from get_value (in XY) =
       0.0        0.0  
       0.0        0.0  
       0.0        0.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 ETRAN
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
     from get_value (in XY) =
       0.0        0.0  
       0.0        0.0  
       0.0        0.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 QSEVA
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
     from get_value (in XY) =
       0.0        0.0  
       0.0        0.0  
       0.0        0.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 EVAPOTRANS
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   1.90734863E-06
     from get_value (flattened) =
   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
     from get_value (in XY) =
       0.0        0.0  
       0.0        0.0  
       0.0        0.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 TG
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   253.278137       253.278137       253.278137       253.278137       253.278137       253.278137    
     from get_value (in XY) =
     253.3      253.3  
     253.3      253.3  
     253.3      253.3  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 SNEQV
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   19.0130424       19.0130424       19.0130424       19.0130424       19.0130424       19.0130424    
     from get_value (in XY) =
      19.0       19.0  
      19.0       19.0  
      19.0       19.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 TGS
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   1.90734863E-06
     from get_value (flattened) =
   261.586731       261.586731       261.586731       261.586731       261.586731       261.586731    
     from get_value (in XY) =
     261.6      261.6  
     261.6      261.6  
     261.6      261.6  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 lat
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   40.0099983       40.0099983       40.0099983       40.0099983       40.0099983       40.0099983    
     from get_value (in XY) =
      40.0       40.0  
      40.0       40.0  
      40.0       40.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 lon
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
  -88.3700027      -88.3700027      -88.3700027      -88.3700027      -88.3700027      -88.3700027    
     from get_value (in XY) =
     -88.4      -88.4  
     -88.4      -88.4  
     -88.4      -88.4  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 terrain_slope
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
     from get_value (in XY) =
       0.0        0.0  
       0.0        0.0  
       0.0        0.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 azimuth
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
     from get_value (in XY) =
       0.0        0.0  
       0.0        0.0  
       0.0        0.0  
     our replacement value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     our replacement value (in XY) =
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) = 
   1.00000000       2.00000000       3.00000000       4.00000000       5.00000000       6.00000000    
     and the new value (in XY) = 
       1.0        2.0  
       3.0        4.0  
       5.0        6.0  
 vegtyp
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
           1           1           1           1           1           1
     from get_value (in XY) =
         1          1  
         1          1  
         1          1  
     our replacement value (flattened) =
           1           2           3           4           5           6
     our replacement value (in XY) =
         1          2  
         3          4  
         5          6  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) =
           1           2           3           4           5           6
     and the new value (in XY) =
         1          2  
         3          4  
         5          6  
 croptype
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   1.90734863E-06
     from get_value (flattened) =
           0           0           0           0           0           0
     from get_value (in XY) =
         0          0  
         0          0  
         0          0  
     our replacement value (flattened) =
           1           2           3           4           5           6
     our replacement value (in XY) =
         1          2  
         3          4  
         5          6  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) =
           1           2           3           4           5           6
     and the new value (in XY) =
         1          2  
         3          4  
         5          6  
 isltyp
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   1.90734863E-06
     from get_value (flattened) =
           1           1           1           1           1           1
     from get_value (in XY) =
         1          1  
         1          1  
         1          1  
     our replacement value (flattened) =
           1           2           3           4           5           6
     our replacement value (in XY) =
         1          2  
         3          4  
         5          6  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) =
           1           2           3           4           5           6
     and the new value (in XY) =
         1          2  
         3          4  
         5          6  
 IST
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
           1           1           1           1           1           1
     from get_value (in XY) =
         1          1  
         1          1  
         1          1  
     our replacement value (flattened) =
           1           2           3           4           5           6
     our replacement value (in XY) =
         1          2  
         3          4  
         5          6  
     set_value function cpu time (s) =   1.90734863E-06
     and the new value (flattened) =
           1           2           3           4           5           6
     and the new value (in XY) =
         1          2  
         3          4  
         5          6  
 soilcolor
     column count (n_x) =            2
     row count (n_y) =            3
     get_value function cpu time (s) =   0.00000000    
     from get_value (flattened) =
           4           4           4           4           4           4
     from get_value (in XY) =
         4          4  
         4          4  
         4          4  
     our replacement value (flattened) =
           1           2           3           4           5           6
     our replacement value (in XY) =
         1          2  
         3          4  
         5          6  
     set_value function cpu time (s) =   0.00000000    
     and the new value (flattened) =
           1           2           3           4           5           6
     and the new value (in XY) =
         1          2  
         3          4  
         5          6  
 
 TEST get/set_value FUNCTIONALITY WITH BMI  (3D VARIABLES ONLY)********************
 smc
     column count (n_x) =            2
     row count (n_y) =            3
     soil horizon count (n_z) =            4
     get_value function cpu time (s) =   0.00000000    
 soil horizon =           1
       0.1        0.1  
       0.1        0.1  
       0.1        0.1  
 soil horizon =           2
       0.1        0.1  
       0.1        0.1  
       0.1        0.1  
 soil horizon =           3
       0.1        0.1  
       0.1        0.1  
       0.1        0.1  
 soil horizon =           4
       0.1        0.1  
       0.1        0.1  
       0.1        0.1  
     set_value function cpu time (s) =   1.90734863E-06
 soil horizon =           1
     999.9      999.9  
     999.9      999.9  
     999.9      999.9  
 soil horizon =           2
     999.9      999.9  
     999.9      999.9  
     999.9      999.9  
 soil horizon =           3
     999.9      999.9  
     999.9      999.9  
     999.9      999.9  
 soil horizon =           4
     999.9      999.9  
     999.9      999.9  
     999.9      999.9  
 
 TEST get_value_ptr FUNCTIONALITY WITH BMI***************************************
 SFCPRS from get_value_ptr returned BMI_FAILURE --- test passed
 SFCTMP from get_value_ptr returned BMI_FAILURE --- test passed
 SOLDN from get_value_ptr returned BMI_FAILURE --- test passed
 LWDN from get_value_ptr returned BMI_FAILURE --- test passed
 UU from get_value_ptr returned BMI_FAILURE --- test passed
 VV from get_value_ptr returned BMI_FAILURE --- test passed
 Q2 from get_value_ptr returned BMI_FAILURE --- test passed
 PRCPNONC from get_value_ptr returned BMI_FAILURE --- test passed
 QINSUR from get_value_ptr returned BMI_FAILURE --- test passed
 ETRAN from get_value_ptr returned BMI_FAILURE --- test passed
 QSEVA from get_value_ptr returned BMI_FAILURE --- test passed
 EVAPOTRANS from get_value_ptr returned BMI_FAILURE --- test passed
 TG from get_value_ptr returned BMI_FAILURE --- test passed
 SNEQV from get_value_ptr returned BMI_FAILURE --- test passed
 TGS from get_value_ptr returned BMI_FAILURE --- test passed
 SFCPRS from get_value_at_indices returned BMI_FAILURE --- test passed
 SFCPRS from set_value_at_indices returned BMI_FAILURE --- test passed
 SFCTMP from get_value_at_indices returned BMI_FAILURE --- test passed
 SFCTMP from set_value_at_indices returned BMI_FAILURE --- test passed
 SOLDN from get_value_at_indices returned BMI_FAILURE --- test passed
 SOLDN from set_value_at_indices returned BMI_FAILURE --- test passed
 LWDN from get_value_at_indices returned BMI_FAILURE --- test passed
 LWDN from set_value_at_indices returned BMI_FAILURE --- test passed
 UU from get_value_at_indices returned BMI_FAILURE --- test passed
 UU from set_value_at_indices returned BMI_FAILURE --- test passed
 VV from get_value_at_indices returned BMI_FAILURE --- test passed
 VV from set_value_at_indices returned BMI_FAILURE --- test passed
 Q2 from get_value_at_indices returned BMI_FAILURE --- test passed
 Q2 from set_value_at_indices returned BMI_FAILURE --- test passed
 PRCPNONC from get_value_at_indices returned BMI_FAILURE --- test passed
 PRCPNONC from set_value_at_indices returned BMI_FAILURE --- test passed
 QINSUR from get_value_at_indices returned BMI_FAILURE --- test passed
 QINSUR from set_value_at_indices returned BMI_FAILURE --- test passed
 ETRAN from get_value_at_indices returned BMI_FAILURE --- test passed
 ETRAN from set_value_at_indices returned BMI_FAILURE --- test passed
 QSEVA from get_value_at_indices returned BMI_FAILURE --- test passed
 QSEVA from set_value_at_indices returned BMI_FAILURE --- test passed
 EVAPOTRANS from get_value_at_indices returned BMI_FAILURE --- test passed
 EVAPOTRANS from set_value_at_indices returned BMI_FAILURE --- test passed
 TG from get_value_at_indices returned BMI_FAILURE --- test passed
 TG from set_value_at_indices returned BMI_FAILURE --- test passed
 SNEQV from get_value_at_indices returned BMI_FAILURE --- test passed
 SNEQV from set_value_at_indices returned BMI_FAILURE --- test passed
 TGS from get_value_at_indices returned BMI_FAILURE --- test passed
 TGS from set_value_at_indices returned BMI_FAILURE --- test passed
 
 TEST GRID INFO FUNCTIONALITY WITH BMI***************************************
 The integer value for the SFCPRS grid is            1
 The grid type for SFCPRS is uniform_rectilinear
 The grid rank for SFCPRS is            2
 The grid shape for the SFCPRS grid is            3           2
 The grid size for SFCPRS is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid            1  is   -1.0000000000000000     
 The Y coord for grid            1  is   -1.0000000000000000     
 The Z coord for grid            1  is   -1.0000000000000000     
 The integer value for the SFCTMP grid is            2
 The grid type for SFCTMP is uniform_rectilinear
 The grid rank for SFCTMP is            2
 The grid shape for the SFCTMP grid is            3           2
 The grid size for SFCTMP is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid            2  is   -1.0000000000000000     
 The Y coord for grid            2  is   -1.0000000000000000     
 The Z coord for grid            2  is   -1.0000000000000000     
 The integer value for the SOLDN grid is            3
 The grid type for SOLDN is uniform_rectilinear
 The grid rank for SOLDN is            2
 The grid shape for the SOLDN grid is            3           2
 The grid size for SOLDN is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid            3  is   -1.0000000000000000     
 The Y coord for grid            3  is   -1.0000000000000000     
 The Z coord for grid            3  is   -1.0000000000000000     
 The integer value for the LWDN grid is            4
 The grid type for LWDN is uniform_rectilinear
 The grid rank for LWDN is            2
 The grid shape for the LWDN grid is            3           2
 The grid size for LWDN is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid            4  is   -1.0000000000000000     
 The Y coord for grid            4  is   -1.0000000000000000     
 The Z coord for grid            4  is   -1.0000000000000000     
 The integer value for the UU grid is            5
 The grid type for UU is uniform_rectilinear
 The grid rank for UU is            2
 The grid shape for the UU grid is            3           2
 The grid size for UU is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid            5  is   -1.0000000000000000     
 The Y coord for grid            5  is   -1.0000000000000000     
 The Z coord for grid            5  is   -1.0000000000000000     
 The integer value for the VV grid is            6
 The grid type for VV is uniform_rectilinear
 The grid rank for VV is            2
 The grid shape for the VV grid is            3           2
 The grid size for VV is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid            6  is   -1.0000000000000000     
 The Y coord for grid            6  is   -1.0000000000000000     
 The Z coord for grid            6  is   -1.0000000000000000     
 The integer value for the Q2 grid is            7
 The grid type for Q2 is uniform_rectilinear
 The grid rank for Q2 is            2
 The grid shape for the Q2 grid is            3           2
 The grid size for Q2 is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid            7  is   -1.0000000000000000     
 The Y coord for grid            7  is   -1.0000000000000000     
 The Z coord for grid            7  is   -1.0000000000000000     
 The integer value for the PRCPNONC grid is            8
 The grid type for PRCPNONC is uniform_rectilinear
 The grid rank for PRCPNONC is            2
 The grid shape for the PRCPNONC grid is            3           2
 The grid size for PRCPNONC is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid            8  is   -1.0000000000000000     
 The Y coord for grid            8  is   -1.0000000000000000     
 The Z coord for grid            8  is   -1.0000000000000000     
 The integer value for the QINSUR grid is            9
 The grid type for QINSUR is uniform_rectilinear
 The grid rank for QINSUR is            2
 The grid shape for the QINSUR grid is            3           2
 The grid size for QINSUR is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid            9  is   -1.0000000000000000     
 The Y coord for grid            9  is   -1.0000000000000000     
 The Z coord for grid            9  is   -1.0000000000000000     
 The integer value for the ETRAN grid is           10
 The grid type for ETRAN is uniform_rectilinear
 The grid rank for ETRAN is            2
 The grid shape for the ETRAN grid is            3           2
 The grid size for ETRAN is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           10  is   -1.0000000000000000     
 The Y coord for grid           10  is   -1.0000000000000000     
 The Z coord for grid           10  is   -1.0000000000000000     
 The integer value for the QSEVA grid is           11
 The grid type for QSEVA is uniform_rectilinear
 The grid rank for QSEVA is            2
 The grid shape for the QSEVA grid is            3           2
 The grid size for QSEVA is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           11  is   -1.0000000000000000     
 The Y coord for grid           11  is   -1.0000000000000000     
 The Z coord for grid           11  is   -1.0000000000000000     
 The integer value for the EVAPOTRANS grid is           12
 The grid type for EVAPOTRANS is uniform_rectilinear
 The grid rank for EVAPOTRANS is            2
 The grid shape for the EVAPOTRANS grid is            3           2
 The grid size for EVAPOTRANS is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           12  is   -1.0000000000000000     
 The Y coord for grid           12  is   -1.0000000000000000     
 The Z coord for grid           12  is   -1.0000000000000000     
 The integer value for the TG grid is           13
 The grid type for TG is uniform_rectilinear
 The grid rank for TG is            2
 The grid shape for the TG grid is            3           2
 The grid size for TG is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           13  is   -1.0000000000000000     
 The Y coord for grid           13  is   -1.0000000000000000     
 The Z coord for grid           13  is   -1.0000000000000000     
 The integer value for the SNEQV grid is           14
 The grid type for SNEQV is uniform_rectilinear
 The grid rank for SNEQV is            2
 The grid shape for the SNEQV grid is            3           2
 The grid size for SNEQV is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           14  is   -1.0000000000000000     
 The Y coord for grid           14  is   -1.0000000000000000     
 The Z coord for grid           14  is   -1.0000000000000000     
 The integer value for the TGS grid is           15
 The grid type for TGS is uniform_rectilinear
 The grid rank for TGS is            2
 The grid shape for the TGS grid is            3           2
 The grid size for TGS is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           15  is   -1.0000000000000000     
 The Y coord for grid           15  is   -1.0000000000000000     
 The Z coord for grid           15  is   -1.0000000000000000     
 The integer value for the lat grid is           16
 The grid type for lat is uniform_rectilinear
 The grid rank for lat is            2
 The grid shape for the lat grid is            3           2
 The grid size for lat is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           16  is   -1.0000000000000000     
 The Y coord for grid           16  is   -1.0000000000000000     
 The Z coord for grid           16  is   -1.0000000000000000     
 The integer value for the lon grid is           17
 The grid type for lon is uniform_rectilinear
 The grid rank for lon is            2
 The grid shape for the lon grid is            3           2
 The grid size for lon is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           17  is   -1.0000000000000000     
 The Y coord for grid           17  is   -1.0000000000000000     
 The Z coord for grid           17  is   -1.0000000000000000     
 The integer value for the terrain_slope grid is           18
 The grid type for terrain_slope is uniform_rectilinear
 The grid rank for terrain_slope is            2
 The grid shape for the terrain_slope grid is            3           2
 The grid size for terrain_slope is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           18  is   -1.0000000000000000     
 The Y coord for grid           18  is   -1.0000000000000000     
 The Z coord for grid           18  is   -1.0000000000000000     
 The integer value for the azimuth grid is           19
 The grid type for azimuth is uniform_rectilinear
 The grid rank for azimuth is            2
 The grid shape for the azimuth grid is            3           2
 The grid size for azimuth is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           19  is   -1.0000000000000000     
 The Y coord for grid           19  is   -1.0000000000000000     
 The Z coord for grid           19  is   -1.0000000000000000     
 The integer value for the vegtyp grid is           20
 The grid type for vegtyp is uniform_rectilinear
 The grid rank for vegtyp is            2
 The grid shape for the vegtyp grid is            3           2
 The grid size for vegtyp is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           20  is   -1.0000000000000000     
 The Y coord for grid           20  is   -1.0000000000000000     
 The Z coord for grid           20  is   -1.0000000000000000     
 The integer value for the croptype grid is           21
 The grid type for croptype is uniform_rectilinear
 The grid rank for croptype is            2
 The grid shape for the croptype grid is            3           2
 The grid size for croptype is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           21  is   -1.0000000000000000     
 The Y coord for grid           21  is   -1.0000000000000000     
 The Z coord for grid           21  is   -1.0000000000000000     
 The integer value for the isltyp grid is           22
 The grid type for isltyp is uniform_rectilinear
 The grid rank for isltyp is            2
 The grid shape for the isltyp grid is            3           2
 The grid size for isltyp is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           22  is   -1.0000000000000000     
 The Y coord for grid           22  is   -1.0000000000000000     
 The Z coord for grid           22  is   -1.0000000000000000     
 The integer value for the IST grid is           23
 The grid type for IST is uniform_rectilinear
 The grid rank for IST is            2
 The grid shape for the IST grid is            3           2
 The grid size for IST is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           23  is   -1.0000000000000000     
 The Y coord for grid           23  is   -1.0000000000000000     
 The Z coord for grid           23  is   -1.0000000000000000     
 The integer value for the soilcolor grid is           24
 The grid type for soilcolor is uniform_rectilinear
 The grid rank for soilcolor is            2
 The grid shape for the soilcolor grid is            3           2
 The grid size for soilcolor is            6
 No grid spacing for the grid type/rank
 No grid origin for the grid type/rank
 The X coord for grid           24  is   -1.0000000000000000     
 The Y coord for grid           24  is   -1.0000000000000000     
 The Z coord for grid           24  is   -1.0000000000000000     
 
 NOTES **********************************************************************
 The unstructured grid functions will return BMI_FAILURE
 BMI functions that require Noah-OWP-Modular Surface Module to use pointer vars are not implemented
 
 All done testing!
 
